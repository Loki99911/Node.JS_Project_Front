{"version":3,"file":"static/js/212.8e33c0b4.chunk.js","mappings":"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","sources":["components/RecipePageHero/RecipePageHero.styled.jsx","components/RecipePageHero/RecipePageHero.jsx","components/RecipeInngredientsItem/RecipeInngredientsItem.styled.jsx","components/RecipeInngredientsItem/RecipeInngredientsItem.jsx","components/RecipeInngredientsList/RecipeInngredientsList.styled.jsx","components/RecipeInngredientsList/RecipeInngredientsList.jsx","../node_modules/nanoid/index.browser.js","components/RecipePreparation/RecipePreparation.styled.jsx","components/RecipePreparation/RecipePreparation.jsx","pages/Recipe/Recipe.styled.jsx","pages/Recipe/Recipe.jsx","redux/ownRecipes/ownRecipesSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nimport mob1 from '../../images/mobile/recipeHero_mob_1x.jpg';\nimport mob2 from '../../images/mobile/recipeHero_mob_2x.jpg';\nimport tab1 from '../../images/tablet/recipeHero_tab_1x.jpg';\nimport tab2 from '../../images/tablet/recipeHero_tab_2x.jpg';\nimport desktop1 from '../../images/desktop/recipeHero_desktop_1x.jpg';\nimport desktop2 from '../../images/desktop/recipeHero_desktop_2x.jpg';\nimport { ButtonSkewStyle } from 'components/ButtonSkew/buttonSkew.styled';\n\nexport const RecipeHeroConteiner = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-image: url(${mob1});\n  background-repeat: no-repeat;\n  width: 100%;\n  height: 455px;\n  margin-bottom: 32px;\n  padding-top: 144px;\n  padding-bottom: 90px;\n  ${ButtonSkewStyle} {\n    margin-top: auto;\n    padding: 10px 18px;\n    color: black;\n\n    @media screen and (min-width: 768px) {\n      padding-bottom: 90px;\n      padding: 18px 44px;\n    }\n    @media screen and (min-width: 1440px) {\n    }\n\n    &:hover {\n      color: white;\n    }\n  }\n\n  @media screen and (min-device-pixel-ratio: 2),\n    screen and (min-resolution: 192dpi),\n    (-webkit-min-device-pixel-ratio: 2),\n    screen and (min-resolution: 2dppx) {\n    background-image: url(${mob2});\n  }\n\n  @media screen and (min-width: 375px) {\n    width: 375px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 50px;\n    padding-top: 136px;\n    padding-bottom: 32px;\n    width: 768px;\n    height: 495px;\n    background-image: url(${tab1});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${tab2});\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1440px;\n    padding-top: 164px;\n    height: 493px;\n    background-image: url(${desktop1});\n\n    @media screen and (min-device-pixel-ratio: 2),\n      screen and (min-resolution: 192dpi),\n      (-webkit-min-device-pixel-ratio: 2),\n      screen and (min-resolution: 2dppx) {\n      background-image: url(${desktop2});\n    }\n  }\n`;\n\nexport const HeroTitle = styled.title`\n  display: block;\n  text-align: center;\n  font-weight: ${p => p.theme.fontWeights[2]};\n  font-size: 24px;\n  line-height: ${p => p.theme.lineHeights.subheader};\n  margin-bottom: 18px;\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  color: ${p => p.theme.colors.mainAccent};\n\n  @media screen and (min-width: 768px) {\n    font-size: 44px;\n    margin-bottom: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const HeroText = styled.p`\n  font-weight: ${p => p.theme.fontWeights[0]};\n  text-align: center;\n  font-size: 12px;\n  line-height: ${p => p.theme.lineHeights.description};\n  letter-spacing: ${p => p.theme.letterSpacings.content};\n  width: 303px;\n\n  @media screen and (min-width: 768px) {\n    width: 506px;\n    font-size: 18px;\n    line-height: 1.33;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 656px;\n  }\n`;\n\nexport const CookingTime = styled.div`\n  display: flex;\n  width: fit-content;\n  align-items: center;\n  color: black;\n  margin-top: 42px;\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 10px;\n  line-height: 1.4;\n  letter-spacing: ${p => p.theme.letterSpacings.subheader};\n\n  @media screen and (min-width: 768px) {\n    margin-top: 65px;\n    font-size: 14px;\n    line-height: ${p => p.theme.lineHeights.time};\n  }\n  @media screen and (min-width: 1440px) {\n    margin-top: 48px;\n  }\n\n  & svg {\n    margin-right: 5px;\n    stroke: black;\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n\n    @media screen and (min-width: 768px) {\n      width: 20px;\n      height: 20px;\n    }\n    @media screen and (min-width: 1440px) {\n    }\n  }\n`;\n","import {\n  RecipeHeroConteiner,\n  HeroTitle,\n  CookingTime,\n  HeroText,\n} from './RecipePageHero.styled';\nimport { ButtonSkew } from 'components/ButtonSkew/ButtonSkew';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavorite } from 'redux/ownRecipes/ownRecipesOperations';\nimport { getFavoriteRecipes } from 'redux/ownRecipes/ownRecipesSelectors';\nimport sprite from '../../images/sprite.svg';\nimport {\n  addFavorite,\n  deleteFavorite,\n} from 'redux/ownRecipes/ownRecipesOperations';\n\nconst RecipePageHero = ({ meal, idMeal, about, cookingTime }) => {\n  const [btnText, setBtnText] = useState(false);\n\n  const dispatcher = useDispatch();\n  const obj = useSelector(getFavoriteRecipes);\n\n  function deleteFromFav() {\n    dispatcher(deleteFavorite(idMeal));\n    setBtnText(false);\n    return;\n  }\n\n  // function toFavorite() {\n  //   console.log(btnText);\n\n  //   if (btnText) {\n  //     dispatcher(deleteFavorite(idMeal));\n  //     setBtnText(false);\n  //     console.log(btnText);\n  //     return;\n  //   }\n\n  //   dispatcher(addFavorite(idMeal));\n  //   setBtnText(true);\n  //   return;\n  // }\n\n  function addtoFavorite() {\n    dispatcher(addFavorite(idMeal));\n    setBtnText(true);\n    return;\n  }\n\n  function getIngDescription(recipeName) {\n    if (obj !== undefined) {\n      const recipe = obj.some(\n        recipe =>\n          recipe.strMeal ===\n          recipeName.replace(recipeName[0], recipeName[0].toUpperCase())\n      );\n      return recipe;\n    }\n    return false;\n  }\n\n  useEffect(() => {\n    dispatcher(getFavorite({}));\n  }, [dispatcher]);\n\n  return (\n    <>\n      <RecipeHeroConteiner>\n        <HeroTitle>{meal}</HeroTitle>\n        <HeroText>{about}</HeroText>\n        {btnText || getIngDescription(meal) ? (\n          <ButtonSkew\n            type=\"button\"\n            text={'delete from favorite recipes'}\n            styled=\"other\"\n            location=\"recipes\"\n            fn={deleteFromFav}\n          />\n        ) : (\n          <ButtonSkew\n            type=\"button\"\n            text=\"add to favorite recipes\"\n            styled=\"other\"\n            location=\"recipes\"\n            fn={addtoFavorite}\n          />\n        )}\n        <CookingTime>\n          <svg>\n            <use href={sprite + `#icon-clock`} />\n          </svg>\n          <span>{cookingTime + ` min`}</span>\n        </CookingTime>\n      </RecipeHeroConteiner>\n    </>\n  );\n};\n\nexport default RecipePageHero;\n","import styled from 'styled-components';\n\nexport const RecipeItem = styled.li`\n  border-radius: ${li => li.theme.radii.image};\n  background-color: ${li => li.theme.colors.secondaryAccent};\n`;\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 8px;\n\n  @media screen and (min-width: 768px) {\n    margin-right: 24px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-right: 40px;\n  }\n\n  & img {\n    border-radius: ${p => p.theme.radii.image};\n    width: 57px;\n    height: 57px;\n\n    @media screen and (min-width: 768px) {\n      width: 136px;\n      height: 136px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 172px;\n      height: 172px;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  padding: 14px 29px 14px 14px;\n\n  @media screen and (min-width: 768px) {\n    padding: 21px 58px 21px 28px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 5px 70px 5px 36px;\n  }\n`;\n\nexport const CustomCheckbox = styled.span`\n  margin-left: 39px;\n  position: relative;\n  display: inline-block;\n  width: 18px;\n  height: 18px;\n  background: transparent;\n  border: 1px solid rgba(126, 126, 126, 0.5);\n  border-radius: ${p => p.theme.radii.btnIcon};\n  & svg {\n    display: inline-block;\n    width: 9px;\n    height: 9px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%) scale(0);\n\n    @media screen and (min-width: 768px) {\n      width: 18px;\n      height: 18px;\n    }\n\n    @media screen and (min-width: 1440px) {\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    border: 2px solid rgba(126, 126, 126, 0.5);\n    width: 35px;\n    height: 35px;\n    margin-left: 78px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-left: 151px;\n  }\n`;\n\nexport const RealCheckbox = styled.input`\n  display: none;\n  &:checked + ${CustomCheckbox} svg {\n    transform: translate(-50%, -50%) scale(1);\n  }\n`;\n\nexport const IngNumber = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  min-width: 37px;\n  height: 23px;\n  border-radius: ${p => p.theme.radii.btnIcon};\n  background: ${p => p.theme.colors.mainAccent};\n  font-weight: ${p => p.theme.fontWeights[2]};\n  font-size: 10px;\n  line-height: 1.5;\n  color: ${p => p.theme.colors.mainLight};\n\n  @media screen and (min-width: 768px) {\n    min-width: 68px;\n    height: 35px;\n    font-size: 18px;\n    line-height: 1.5;\n  }\n`;\n\nexport const TextContainer = styled.div`\n  width: 114px;\n  height: 52px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-line-clamp: 4;\n  -webkit-box-orient: vertical;\n\n  @media screen and (min-width: 768px) {\n    width: 208px;\n    height: 114px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 547px;\n    height: 104px;\n  }\n`;\n\nexport const IngName = styled.title`\n  display: block;\n  margin-bottom: 4px;\n  font-weight: ${p => p.theme.fontWeights[1]};\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: ${p => p.theme.letterSpacings.subheader};\n  color: ${li => li.theme.colors.secondaryDark};\n  @media screen and (min-width: 768px) {\n    font-size: 24px;\n    line-height: ${p => p.theme.lineHeights.subheader};\n    margin-bottom: 18px;\n  }\n`;\n\nexport const IngDescr = styled.p`\n  font-weight: ${p => p.theme.fontWeights[0]};\n  font-size: 8px;\n  line-height: 1.38;\n  letter-spacing: ${p => p.theme.letterSpacings.subheader};\n  color: ${p => p.theme.colors.mainGrey};\n\n  @media screen and (min-width: 768px) {\n    overflow-y: clip;\n    font-size: 24px;\n    line-height: ${p => p.theme.lineHeights.subheader};\n    font-size: 12px;\n    line-height: 1.67;\n  }\n`;\n","import {\n  RecipeItem,\n  ImageWrapper,\n  Label,\n  RealCheckbox,\n  CustomCheckbox,\n  IngNumber,\n  TextContainer,\n  IngName,\n  IngDescr,\n} from './RecipeInngredientsItem.styled';\nimport sprite from '../../images/sprite.svg';\n\nimport { useState } from 'react';\nimport { addShoppingIngredient } from 'redux/ingredients/ingredientsOperations';\nimport { useDispatch } from 'react-redux';\n\nconst RecipeInngredientsItem = obj => {\n  const [toShoppingList, setToShoppingList] = useState(false);\n  const dispatcher = useDispatch();\n\n  const addToShoppingList = () => {\n    setToShoppingList(true);\n    dispatcher(\n      addShoppingIngredient({\n        image: obj.image,\n        strIngredient: obj.strIngredient,\n        weight: obj.weight,\n      })\n    );\n    return;\n  };\n\n  return (\n    <>\n      <RecipeItem>\n        <Label>\n          <ImageWrapper>\n            <img src={obj.image} alt={obj.strIngredient} />\n          </ImageWrapper>\n          <TextContainer>\n            <IngName>{obj.strIngredient}</IngName>\n            <IngDescr>{obj.strDescription}</IngDescr>\n          </TextContainer>\n          <IngNumber>{obj.weight}</IngNumber>\n          <RealCheckbox\n            type=\"checkbox\"\n            onChange={addToShoppingList}\n            disabled={toShoppingList}\n          />\n          <CustomCheckbox>\n            <svg>\n              <use href={sprite + `#icon-pick`} />\n            </svg>\n          </CustomCheckbox>\n        </Label>\n      </RecipeItem>\n    </>\n  );\n};\n\nexport default RecipeInngredientsItem;\n","import styled from 'styled-components';\n\nexport const InngredientsWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 50px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    margin-bottom: 96px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 100px;\n  }\n`;\n","import RecipeInngredientsItem from 'components/RecipeInngredientsItem/RecipeInngredientsItem';\nimport { InngredientsWrapper } from './RecipeInngredientsList.styled';\n\nimport { getIngredients } from 'redux/ingredients/ingredientsSelectors';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\n\nconst RecipeInngredientsList = ({ ingredients }) => {\n  const allOfIngredients = useSelector(getIngredients);\n\n  return (\n    allOfIngredients && (\n      <InngredientsWrapper>\n        {ingredients.map(inngredient => (\n          <RecipeInngredientsItem\n            image={inngredient.imgURL}\n            strIngredient={inngredient.ingredient}\n            key={nanoid(6)}\n            weight={inngredient.qty}\n            strDescription={inngredient.description}\n            idIngredient={inngredient.id}\n          />\n        ))}\n      </InngredientsWrapper>\n    )\n  );\n};\n\nexport default RecipeInngredientsList;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const PreparationWrapper = styled.div`\n  margin-bottom: 100px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 200px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    gap: 107px;\n  }\n`;\nexport const InstructionWrapper = styled.div`\n  margin-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 53px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 469px;\n    margin-bottom: 0;\n  }\n`;\n\nexport const InstructionTitle = styled.title`\n  display: block;\n  margin-bottom: 30px;\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1;\n  letter-spacing: -0.02em;\n  color: ${({ theme }) => theme.colors.secondaryDark};\n  @media screen and (min-width: 768px) {\n    margin-bottom: 32px;\n    letter-spacing: -0.24px;\n  }\n`;\n\nexport const InstructionList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: -0.02em;\n  gap: 14px;\n\n  @media screen and (min-width: 768px) {\n    gap: 18px;\n    font-size: 14px;\n    line-height: 1.29;\n  }\n`;\n\nexport const InstructionText = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  gap: 14px;\n\n  & span {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n    width: 21px;\n    height: 21px;\n    padding: 2px 7px 1px;\n    font-weight: 600;\n    font-size: 12px;\n    line-height: 18px;\n    color: #ffffff;\n    background: #8baa36;\n    border-radius: 100px;\n    flex: none;\n\n    @media screen and (min-width: 768px) {\n      padding: 0.5px 7px 2.5px;\n      font-size: 14px;\n      line-height: 21px;\n    }\n  }\n\n  & p {\n    padding-top: 2px;\n    color: ${({ theme }) => theme.colors.mainBlack};\n  }\n`;\n\nexport const ImageWrapper = styled.div`\n  & img {\n    border-radius: 8px;\n    width: 100%;\n    height: 219px;\n    object-fit: cover;\n\n    @media screen and (min-width: 768px) {\n      height: 332px;\n    }\n\n    @media screen and (min-width: 1440px) {\n      width: 664px;\n    }\n  }\n`;\n","import {\n  ImageWrapper,\n  PreparationWrapper,\n  InstructionWrapper,\n  InstructionTitle,\n  InstructionText,\n  InstructionList,\n} from './RecipePreparation.styled';\n\nconst RecipePreparation = ({ image, instructions }) => {\n  const items = instructions\n    .split('\\r\\n')\n    .filter(elem => {\n      if (!elem) return false;\n      if (!isNaN(elem)) return false;\n      if (elem.toLowerCase().includes('step')) return false;\n      return true;\n    })\n    .map((item, index) => {\n      return (\n        <InstructionText key={item}>\n          <span>{index + 1}</span>\n          <p>{item}</p>\n        </InstructionText>\n      );\n    });\n\n  return (\n    <PreparationWrapper>\n      <InstructionWrapper>\n        <InstructionTitle>Recipe Preparation</InstructionTitle>\n        <InstructionList>{items}</InstructionList>\n      </InstructionWrapper>\n      <ImageWrapper>\n        <img src={image} alt=\"ImgText\" />\n      </ImageWrapper>\n    </PreparationWrapper>\n  );\n};\n\nexport default RecipePreparation;\n","import styled from 'styled-components';\n\nexport const ReportsTable = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    border-radius: ${div => div.theme.radii.image};\n  height: 42px;\n  padding: 0 14px;\n  margin-bottom: 24px;\n  color: ${p => p.theme.colors.mainLight};\n  background-color: ${p => p.theme.colors.mainAccent};\n\n    @media screen and (min-width: 768px) {\n    height: 58px;    \n    padding: 0 32px;\n    margin-bottom: 32px;\n    }\n\n    @media screen and (min-width: 1440px) {\n    height: 60px;\n    padding: 0 40px;\n    margin-bottom: 50px;\n    }\n\n\n    p {\n        font-weight: ${p => p.theme.fontWeights[2]};\n        font-size: 10px;\n        line-height: 1.5;\n        letter-spacing: 0.03em;\n\n    @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 1.5;\n    }\n    }\n\n    span {\n    margin-left: 16px;\n    \n    @media screen and (min-width: 768px) {\n    margin-left: 38px;\n    }\n\n    @media screen and (min-width: 1440px) {\n    margin-left: 109px;\n    }\n  }\n`;","import RecipePageHero from 'components/RecipePageHero/RecipePageHero';\nimport RecipeInngredientsList from 'components/RecipeInngredientsList/RecipeInngredientsList';\nimport RecipePreparation from 'components/RecipePreparation/RecipePreparation';\nimport { Container } from 'components/Container/Container';\nimport { ReportsTable } from './Recipe.styled';\n\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getSingleRecipe } from 'redux/outerRecipes/outerRecipesSelectors';\nimport { getOneRecipeById } from 'redux/outerRecipes/outerRecipesOperations';\nimport { getOwnRecipeByID } from 'redux/ownRecipes/ownRecipesOperations';\nimport { getSingleOwnRecipe } from 'redux/ownRecipes/ownRecipesSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Recipe = () => {\n  const [recipeObj, setRecipeObj] = useState(null);\n  const { recipeId } = useParams();\n  const dispatcher = useDispatch();\n  const recipe = useSelector(getSingleRecipe);\n  const ownRecipe = useSelector(getSingleOwnRecipe);\n  const myRecipe = () => {\n    return recipeObj ? recipe : ownRecipe;\n  };\n  // ownRecipe && console.log(Object.keys(ownRecipe).length);\n\n  useEffect(() => {\n    if (('' + recipeId).length < 10) {\n      dispatcher(getOneRecipeById(recipeId));\n      setRecipeObj(true);\n    } else {\n      dispatcher(getOwnRecipeByID(recipeId));\n      setRecipeObj(false);\n    }\n  }, [recipeId, dispatcher]);\n\n  return (\n    myRecipe() && (\n      <>\n        <RecipePageHero\n          meal={myRecipe().title}\n          idMeal={recipeId}\n          about={myRecipe().about}\n          cookingTime={myRecipe().cookingTime}\n        />\n        <Container>\n          <ReportsTable>\n            <p>Ingredients</p>\n            <p>\n              Number <span>Add to list</span>\n            </p>\n          </ReportsTable>\n          <RecipeInngredientsList ingredients={myRecipe().ingredients} />\n          <RecipePreparation\n            image={myRecipe().imgURL}\n            instructions={myRecipe().description}\n          />\n        </Container>\n      </>\n    )\n  );\n};\n\nexport default Recipe;\n","// ------------------ Own Recipes ------------------\n// ---- returns an Array of Objects\n// ---- Use with function \"getOwnRecipes()\"\nexport const getCustomRecipes = state => state.ownRecipes.ownRecipes.recipes;\nexport const getTotalCustomRecipes = state => state.ownRecipes.ownRecipes.total;\n\n// ------------------ Favorites ------------------\n// ---- returns an Array of Objects\n// ---- Use with function \"getFavorite()\"\nexport const getFavoriteRecipes = state => state.ownRecipes.favorites.recipes;\nexport const getTotalFavoriteRecipes = state =>\n  state.ownRecipes.favorites.total;\n\n// ------------------ Own Recipe by ID ------------------\n// ---- returns an Object\n// ---- Use with function \"getOwnRecipeByID('4657855345')\"\nexport const getSingleOwnRecipe = state => state.ownRecipes.singleRecipe;\n\n// ------------------ Additional ------------------\nexport const getIsOwnRecipesFetching = state =>\n  state.ownRecipes.isOwnRecipesFetching;\n"],"names":["RecipeHeroConteiner","styled","mob1","ButtonSkewStyle","mob2","tab1","tab2","desktop1","desktop2","HeroTitle","p","theme","fontWeights","lineHeights","subheader","letterSpacings","content","colors","mainAccent","HeroText","description","CookingTime","time","recipeName","meal","idMeal","about","cookingTime","useState","btnText","setBtnText","dispatcher","useDispatch","obj","useSelector","getFavoriteRecipes","useEffect","getFavorite","undefined","some","recipe","strMeal","replace","toUpperCase","ButtonSkew","type","text","location","fn","deleteFavorite","addFavorite","href","sprite","RecipeItem","li","radii","image","secondaryAccent","ImageWrapper","Label","CustomCheckbox","btnIcon","RealCheckbox","IngNumber","mainLight","TextContainer","IngName","secondaryDark","IngDescr","mainGrey","toShoppingList","setToShoppingList","src","alt","strIngredient","strDescription","weight","onChange","addShoppingIngredient","disabled","InngredientsWrapper","ingredients","getIngredients","map","inngredient","imgURL","ingredient","qty","idIngredient","id","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","nanoid","PreparationWrapper","InstructionWrapper","InstructionTitle","InstructionList","InstructionText","mainBlack","items","instructions","split","filter","elem","isNaN","toLowerCase","includes","item","index","ReportsTable","div","recipeObj","setRecipeObj","recipeId","useParams","getSingleRecipe","ownRecipe","getSingleOwnRecipe","myRecipe","length","getOneRecipeById","getOwnRecipeByID","title","Container","getCustomRecipes","state","ownRecipes","recipes","getTotalCustomRecipes","total","favorites","getTotalFavoriteRecipes","singleRecipe"],"sourceRoot":""}