{"version":3,"file":"static/js/347.a0140f26.chunk.js","mappings":"2RAWaA,EAAe,WACxB,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAaC,EAAAA,EAAAA,MACnB,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBN,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KACMC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,KAErCC,EAAAA,EAAAA,YAAU,WACNd,GAAWe,EAAAA,EAAAA,MACd,GAAE,CAACf,KAEJc,EAAAA,EAAAA,YAAU,WACN,GAAgC,IAA5BH,EAAiBK,OAArB,CAEA,IAAMC,EAAWN,EAAiBO,KAAI,SAACC,EAAGC,GACtC,OAAc,IAAVA,EACO,WAEJD,CACV,IAEDb,GAAY,OAAIW,IAEhB,IAAMI,EAAMJ,EAASK,WAAU,SAAAH,GAC3B,OAAOA,EAAEI,gBAAkBzB,CAC9B,KAEY,IAATuB,GACAjB,EAASiB,EAhB4B,CAkB5C,GAAE,CAACV,EAAkBb,IAEtB,IAKM0B,EAAQnB,EAASa,KAAI,SAACC,EAAGC,GAAJ,OACvB,SAACK,EAAA,EAAD,CACIC,MAAOP,EAAEI,cAETI,GAAI,CACAC,QAAS,IACTC,cAAe,OACfC,MAAO,UACP,iBAAkB,CACdA,MAAO,aANVV,EAHc,IAsB3B,OACI,SAACW,EAAA,EAAD,CACIJ,GAAI,CAAEK,SAAU,OAAQC,QAAS,eACjCC,aAVa,WACjBxB,GAAQ,EACX,EASOyB,aARa,WACjBzB,GAAQ,EACX,EAGG,UAKI,SAAC0B,EAAA,EAAD,CACIC,SAlCS,SAACC,EAAOC,GACzBnC,EAASmC,GACThC,EAAS,eAAD,OAAgB+B,EAAME,OAAOC,aACxC,EAgCWtC,MAAOA,EACPuC,QAAQ,aACRC,eAAe,EACf,aAAW,+BACXhB,GAAI,CACA,sBAAuB,CACnB,mCAAoC,CAAEiB,gBAAiB,WACvD,gBAAiB,CAAEA,gBAAiB,WACpCC,UAAW,OACXC,eAAgB,OAChB,uBAAwB,CACpBC,QAAS,SAGjB,2BAA4B,CACxBC,IAAK,OACL,WAAY,CACRlB,MAAO,YAIf,iBAAkB,CACdmB,cAAe,aACfC,SAAU,QACVC,SAAU,OACVC,WAAY,UACZC,WAAY,MACZC,WAAY,OACZC,YAAa,WAIjB,QAAS,CACLC,QAAQ,GAAD,OAAK/C,EAAO,EAAI,GACvBgD,OAAQ,UACRC,YAAa,MACbC,WAAY,2CAtCxB,SA0CKnC,KAIhB,E,6BCvGD,EAdmB,WACjB,OACE,0BACE,UAACoC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,0BACA,SAAChE,EAAD,KACA,SAAC,EAAAiE,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAKT,C","sources":["components/CategoryList/CategoryList.jsx","pages/Categories/Categories.jsx"],"sourcesContent":["import Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCategoryList } from 'redux/outerRecipes/outerRecipesOperations';\nimport { getFullCategoryList } from 'redux/outerRecipes/outerRecipesSelectors';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\n\nexport const CategoryList = () => {\n    const { categoryName } = useParams();\n    const dispatcher = useDispatch();\n    const [value, setValue] = useState(1);\n    const [mapArray, setMapArray] = useState([]);\n    const navigate = useNavigate();\n    const [flag, setFlag] = useState(false);\n    const fullCategoryList = useSelector(getFullCategoryList);\n\n    useEffect(() => {\n        dispatcher(getCategoryList());\n    }, [dispatcher]);\n\n    useEffect(() => {\n        if (fullCategoryList.length === 0) return;\n\n        const newArray = fullCategoryList.map((e, index) => {\n            if (index === 3) {\n                return 'desserts';\n            }\n            return e;\n        });\n\n        setMapArray([...newArray]);\n\n        const idx = newArray.findIndex(e => {\n            return e.toLowerCase() === categoryName;\n        });\n\n        if (idx !== -1) {\n            setValue(idx);\n        }\n    }, [fullCategoryList, categoryName]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        navigate(`/categories/${event.target.textContent}`);\n    };\n\n    const items = mapArray.map((e, index) => (\n        <Tab\n            label={e.toLowerCase()}\n            key={index}\n            sx={{\n                padding: '0',\n                paddingBottom: '28px',\n                color: '#BDBDBD',\n                '&.Mui-selected': {\n                    color: '#8BAA36',\n\n                },\n            }}\n        />\n    ));\n    const onMouseEnter = () => {\n        setFlag(true);\n    };\n    const onMouseLeave = () => {\n        setFlag(false);\n    };\n\n    return (\n        <Box\n            sx={{ maxWidth: '100%', bgcolor: 'transparent' }}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n        >\n            <Tabs\n                onChange={handleChange}\n                value={value}\n                variant=\"scrollable\"\n                scrollButtons={true}\n                aria-label=\"scrollable auto tabs example\"\n                sx={{\n                    '& .MuiTabs-scroller': {\n                        '& .css-1aquho2-MuiTabs-indicator': { backgroundColor: '#8BAA36' },\n                        '& .css-ttwr4n': { backgroundColor: '#8BAA36' },\n                        overflowX: 'auto',\n                        scrollbarWidth: 'none',\n                        '&::-webkit-scrollbar': {\n                            display: 'none',\n                        },\n                    },\n                    '& .MuiTabs-flexContainer': {\n                        gap: '55px',\n                        '& :hover': {\n                            color: '#8BAA36',\n                        },\n                    },\n\n                    '& .MuiTab-root': {\n                        textTransform: 'capitalize',\n                        minWidth: 'unset',\n                        fontSize: '18px',\n                        fontFamily: 'Poppins',\n                        fontWeight: '400',\n                        lineHeight: '18px',\n                        borderColor: '#8BAA36',\n\n                    },\n\n                    '& svg': {\n                        opacity: `${flag ? 1 : 0}`,\n                        stroke: '#8BAA36',\n                        strokeWidth: '3px',\n                        transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                    },\n                }}\n            >\n                {items}\n            </Tabs>\n        </Box>\n    );\n};\n","import { CategoryList } from 'components/CategoryList/CategoryList';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from 'components/Title/Title';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst Categories = () => {\n  return (\n    <div>\n      <Container>\n        <Title>Categories</Title>\n        <CategoryList />\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </Container>\n    </div>\n  );\n};\n\nexport default Categories;\n"],"names":["CategoryList","categoryName","useParams","dispatcher","useDispatch","useState","value","setValue","mapArray","setMapArray","navigate","useNavigate","flag","setFlag","fullCategoryList","useSelector","getFullCategoryList","useEffect","getCategoryList","length","newArray","map","e","index","idx","findIndex","toLowerCase","items","Tab","label","sx","padding","paddingBottom","color","Box","maxWidth","bgcolor","onMouseEnter","onMouseLeave","Tabs","onChange","event","newValue","target","textContent","variant","scrollButtons","backgroundColor","overflowX","scrollbarWidth","display","gap","textTransform","minWidth","fontSize","fontFamily","fontWeight","lineHeight","borderColor","opacity","stroke","strokeWidth","transition","Container","Title","Suspense","fallback","Loader"],"sourceRoot":""}