{"version":3,"file":"static/js/623.c73fec3a.chunk.js","mappings":"uQAqBMA,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KAAYG,KAAK,CACtBC,KAAM,QACNC,OAAQ,CAAEC,EAAG,OAAQC,EAAG,OACxBJ,KAAM,SAAAK,GACJ,MAAO,2BAA2BL,KAAKK,EACxC,IAEHC,SAAUT,EAAAA,KACPU,IAAI,EAAG,0BACPC,IAAI,GAAI,2BACRC,QAAQ,yCAAsB,2BAC9BC,SAAS,6BAmHd,EAhHkB,SAAAC,GAChB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,SAAC,KAAD,CACEC,cAAe,CACbf,MAAM,GACNO,SAAU,IAEZS,iBAAkBnB,EAClBoB,SAAU,SAACC,EAAQC,GACjBN,GACEO,EAAAA,EAAAA,IAAM,CACJpB,MAAOkB,EAAOlB,MACdO,SAAUW,EAAOX,SAASc,UAG9BF,EAAQG,eAAc,GACtBH,EAAQI,WACT,EAfH,SAiBG,SAAAX,GAAK,OACJ,UAAC,KAAD,YACE,SAAC,KAAD,uBACA,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gBAAKY,MAAMC,EAAAA,EAAAA,GAASb,EAAMc,OAAO1B,MAAOY,EAAMM,OAAOlB,OAArD,UACE,gBAAK2B,KAAI,UAAKC,EAAAA,EAAL,gBAGZhB,EAAMM,OAAOlB,QACZ,SAAC,KAAD,WACE,0BACE,gBACE2B,KAAI,UAAKC,EAAAA,GAAL,QAAWH,EAAAA,EAAAA,GACbb,EAAMc,OAAO1B,MACbY,EAAMM,OAAOlB,eAMvB,SAAC,KAAD,CACE6B,KAAK,QACL3B,KAAK,QACL4B,YAAY,QACZC,OAAON,EAAAA,EAAAA,GAASb,EAAMc,OAAO1B,MAAOY,EAAMM,OAAOlB,OACjDgC,aAAaP,EAAAA,EAAAA,GACXb,EAAMc,OAAO1B,MACbY,EAAMM,OAAOlB,MACb,kCAIN,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CACE+B,OAAON,EAAAA,EAAAA,GACLb,EAAMc,OAAOnB,SACbK,EAAMM,OAAOX,UAHjB,UAME,gBAAKoB,KAAI,UAAKC,EAAAA,EAAL,mBAGZhB,EAAMM,OAAOX,WACZ,SAAC,KAAD,WACE,0BACE,gBACEoB,KAAI,UAAKC,EAAAA,GAAL,QAAWH,EAAAA,EAAAA,GACbb,EAAMc,OAAOnB,SACbK,EAAMM,OAAOX,kBAMvB,SAAC,KAAD,CACEsB,KAAK,WACL3B,KAAK,WACL4B,YAAY,WACZC,OAAON,EAAAA,EAAAA,GAASb,EAAMc,OAAOnB,SAAUK,EAAMM,OAAOX,UACpDyB,aAAaP,EAAAA,EAAAA,GACXb,EAAMc,OAAOnB,SACbK,EAAMM,OAAOX,SACb,8BAGHK,EAAMM,OAAOX,WACZ,SAAC,KAAD,CACE0B,GAAG,WACHF,OAAON,EAAAA,EAAAA,GACLb,EAAMc,OAAOnB,SACbK,EAAMM,OAAOX,UAJjB,SAOGK,EAAMc,OAAOnB,UAAY,8BAKlC,SAAC,KAAD,CAAYsB,KAAK,SAAjB,qBAjFE,KAqFR,SAAC,KAAD,CAAUK,GAAG,YAAb,4BAGL,ECvID,EARe,WACb,OACE,SAACC,EAAA,EAAD,WACE,SAAC,EAAD,KAGL,C","sources":["components/FormLogin/FormLogin.jsx","pages/Signin/Signin.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport SVG from 'images/sprite.svg';\nimport { getColor } from 'utils/formikColors.js';\n\nimport {\n  BoxForInput,\n  IconForInput,\n  FlagForInput,\n  InputForAuth,\n  FormButton,\n  FormForAuth,\n  TitleForForm,\n  LinkAuth,\n  BoxForForm,\n  SvgAuth,\n  ErrorMessage,\n} from '../FormRegister/style.jsx';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.mixed().test({\n    name: 'email',\n    params: { a: 'test', b: 'qwe' },\n    test: value => {\n      return /\\w+[^\\s]\\w+@\\w+\\.\\w{1,5}/.test(value);\n    },\n  }),\n  password: Yup.string()\n    .min(6, 'Your password is short')\n    .max(16, 'Enter a valid Password*')\n    .matches(/^[a-zа-я1-9A-ZА-Я]/, 'Enter a valid Password*')\n    .required('Enter a valid Password*'),\n});\n\nconst FormLogin = props => {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          email: ``,\n          password: '',\n        }}\n        validationSchema={LoginSchema}\n        onSubmit={(values, actions) => {\n          dispatch(\n            logIn({\n              email: values.email,\n              password: values.password.trim(),\n            })\n          );\n          actions.setSubmitting(false);\n          actions.resetForm();\n        }}\n      >\n        {props => (\n          <FormForAuth>\n            <TitleForForm>Sign in</TitleForForm>\n            <BoxForForm>\n              <BoxForInput>\n                <IconForInput>\n                  <svg fill={getColor(props.errors.email, props.values.email)}>\n                    <use href={`${SVG}#email`}></use>\n                  </svg>\n                </IconForInput>\n                {props.values.email && (\n                  <FlagForInput>\n                    <svg>\n                      <use\n                        href={`${SVG}${getColor(\n                          props.errors.email,\n                          props.values.email\n                        )}`}\n                      ></use>\n                    </svg>\n                  </FlagForInput>\n                )}\n                <InputForAuth\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  color={getColor(props.errors.email, props.values.email)}\n                  bordercolor={getColor(\n                    props.errors.email,\n                    props.values.email,\n                    'rgba(255, 255, 255, 0.3)'\n                  )}\n                />\n              </BoxForInput>\n              <BoxForInput>\n                <IconForInput>\n                  <SvgAuth\n                    color={getColor(\n                      props.errors.password,\n                      props.values.password\n                    )}\n                  >\n                    <use href={`${SVG}#password`}></use>\n                  </SvgAuth>\n                </IconForInput>\n                {props.values.password && (\n                  <FlagForInput>\n                    <svg>\n                      <use\n                        href={`${SVG}${getColor(\n                          props.errors.password,\n                          props.values.password\n                        )}`}\n                      ></use>\n                    </svg>\n                  </FlagForInput>\n                )}\n                <InputForAuth\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  color={getColor(props.errors.password, props.values.password)}\n                  bordercolor={getColor(\n                    props.errors.password,\n                    props.values.password,\n                    'rgba(255, 255, 255, 0.3)'\n                  )}\n                />\n                {props.values.password && (\n                  <ErrorMessage\n                    id=\"feedback\"\n                    color={getColor(\n                      props.errors.password,\n                      props.values.password\n                    )}\n                  >\n                    {props.errors.password || 'Password is secure'}\n                  </ErrorMessage>\n                )}\n              </BoxForInput>\n            </BoxForForm>\n            <FormButton type=\"submit\">Login</FormButton>\n          </FormForAuth>\n        )}\n      </Formik>\n      <LinkAuth to=\"/register\">Registration</LinkAuth>\n    </div>\n  );\n};\n\nexport default FormLogin;\n","import AuthPages from 'components/AuthPages/AuthPages';\nimport FormLogin from 'components/FormLogin/FormLogin';\n\nconst Signin = () => {\n  return (\n    <AuthPages>\n      <FormLogin />\n    </AuthPages>\n  );\n};\n\nexport default Signin;\n"],"names":["LoginSchema","Yup","shape","email","test","name","params","a","b","value","password","min","max","matches","required","props","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","actions","logIn","trim","setSubmitting","resetForm","fill","getColor","errors","href","SVG","type","placeholder","color","bordercolor","id","to","AuthPages"],"sourceRoot":""}