{"version":3,"file":"static/js/347.ca68e743.chunk.js","mappings":"2RAaaA,EAAe,WACxB,IAAQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAaC,EAAAA,EAAAA,MACnB,GAA0BC,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACrB,GAAwBN,EAAAA,EAAAA,WAAS,GAAjC,eAAOO,EAAP,KAAaC,EAAb,KACUC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,KAErCC,EAAAA,EAAAA,YAAU,WACNd,GAAWe,EAAAA,EAAAA,MACd,GAAE,CAACf,KAEJc,EAAAA,EAAAA,YAAU,WACN,GAAgC,IAA5BH,EAAiBK,OAArB,CAEA,IAAMC,EAAWN,EAAiBO,KAAI,SAACC,EAAGC,GACtC,OAAc,IAAVA,EACO,WAEJD,CACV,IAEDb,GAAY,SAAAe,GAAI,wBAAQA,IAAR,OAAiBJ,GAAjB,IAEhB,IAAMK,EAAML,EAASM,WAAU,SAAAJ,GAC3B,OAAOA,EAAEK,gBAAkB1B,CAC9B,KAEY,IAATwB,GACAlB,EAASkB,EAhB4B,CAkB5C,GAAE,CAACX,EAAkBb,IAEtB,IAMM2B,EAAQpB,EAASa,KAAI,SAACC,EAAGC,GAAJ,OACvB,SAACM,EAAA,EAAD,CAAKC,MAAOR,EAAEK,cAA2BI,GAAI,CACzCC,QAAS,IACTC,cAAe,OACf,iBAAkB,CACdC,MAAO,aAJmBX,EADX,IAY3B,OACI,SAACY,EAAA,EAAD,CAAKJ,GAAI,CAAEK,SAAU,OAAQC,QAAS,eAAiBC,aAH1C,WAAOzB,GAAQ,EAAM,EAGiD0B,aAFtE,WAAO1B,GAAQ,EAAO,EAEnC,UACI,SAAC2B,EAAA,EAAD,CACJC,SArBiB,SAACC,EAAOC,GAEzBpC,EAASoC,GACTjC,EAAS,eAAD,OAAgBgC,EAAME,OAAOC,aACxC,EAkBGvC,MAAOA,EACPwC,QAAQ,aACZC,eAAe,EACf,aAAW,+BAEZhB,GAAI,CACa,sBAAuB,CACvB,mCAAmC,CAACiB,gBAAiB,WACrD,gBAAgB,CAACA,gBAAiB,WAClCC,UAAW,OACXC,eAAgB,OAChB,uBAAwB,CACpBC,QAAS,SAGjB,2BAA4B,CACxBC,IAAK,QAET,iBAAkB,CACdC,cAAe,aACfC,SAAU,QACVC,SAAU,OAAQrB,MAAO,UAAWsB,WAAY,UAAWC,WAAY,MAAOC,WAAY,OAC9FC,YAAa,WAEb,QAAS,CACLC,QAAQ,GAAD,OAAKhD,EAAK,EAAE,KA3B3B,SA8BKgB,KAIhB,E,8BC5ED,EAjBmB,WACjB,OACE,0BACA,UAACiC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,wBAEA,SAAC9D,EAAD,KAGE,SAAC,EAAA+D,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACA,SAAC,KAAD,UAKP,C","sources":["components/CategoryList/CategoryList.jsx","pages/Categories/Categories.jsx"],"sourcesContent":["import Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCategoryList } from 'redux/outerRecipes/outerRecipesOperations';\nimport { getFullCategoryList } from 'redux/outerRecipes/outerRecipesSelectors';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n// import { hover } from '@testing-library/user-event/dist/hover';\n\n\n\nexport const CategoryList = () => {\n    const { categoryName } = useParams();\n    const dispatcher = useDispatch();\n    const [value, setValue] = useState(1);\n    const [mapArray, setMapArray] = useState([]);\n    const navigate = useNavigate();\nconst [flag, setFlag] = useState(false);\n    const fullCategoryList = useSelector(getFullCategoryList);\n\n    useEffect(() => {\n        dispatcher(getCategoryList());\n    }, [dispatcher]);\n\n    useEffect(() => {\n        if (fullCategoryList.length === 0) return;\n\n        const newArray = fullCategoryList.map((e, index) => {\n            if (index === 3) {\n                return 'desserts';\n            }\n            return e;\n        });\n\n        setMapArray(prev => [...prev, ...newArray]);\n\n        const idx = newArray.findIndex(e => {\n            return e.toLowerCase() === categoryName;\n        });\n\n        if (idx !== -1) {\n            setValue(idx);\n        }\n    }, [fullCategoryList, categoryName]);\n\n    const handleChange = (event, newValue) => {\n       \n        setValue(newValue);\n        navigate(`/categories/${event.target.textContent}`);\n    };\n\n    const items = mapArray.map((e, index) => (\n        <Tab label={e.toLowerCase()} key={index} sx={{\n            padding: '0',\n            paddingBottom: '28px',\n            '&.Mui-selected': {\n                color: '#8BAA36', \n                },\n             \n        }} />\n    ));\nconst onMouseEnter = () => {setFlag(true)}\nconst onMouseLeave = () => {setFlag(false)}\n    return (\n        <Box sx={{ maxWidth: '100%', bgcolor: 'transparent' }} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            <Tabs\n        onChange={handleChange}\n        value={value}\n        variant=\"scrollable\"\n    scrollButtons={true}\n    aria-label=\"scrollable auto tabs example\"\n       \n   sx={{\n                    '& .MuiTabs-scroller': {\n                    '& .css-1aquho2-MuiTabs-indicator':{backgroundColor: '#8BAA36'},\n                    '& .css-ttwr4n':{backgroundColor: '#8BAA36'},\n                    overflowX: 'auto',\n                    scrollbarWidth: 'none',\n                    '&::-webkit-scrollbar': {\n                        display: 'none',                       \n                    },\n                },\n                '& .MuiTabs-flexContainer': {\n                    gap: '55px',\n                },\n                '& .MuiTab-root': {\n                    textTransform: 'capitalize',\n                    minWidth: 'unset',\n                    fontSize: '18px', color: '#BDBDBD', fontFamily: \"Poppins\", fontWeight: \"400\", lineHeight: \"18px\",\n                borderColor: '#8BAA36'\n                },\n                '& svg': {\n                    opacity: `${flag?1:0}`,\n                },\n            }}>\n                {items}\n            </Tabs>\n        </Box>\n    );\n};\n","\nimport { CategoryList } from 'components/CategoryList/CategoryList';\nimport { Container } from 'components/Container/Container';\nimport { Loader } from 'components/Loader/Loader';\nimport { Title } from 'components/Title/Title';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst Categories = () => {\n  return (\n    <div>\n    <Container>\n      <Title>Category</Title>\n      \n      <CategoryList />\n  \n      \n        <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      </Container>\n    </div>\n  );\n};\n\nexport default Categories;\n"],"names":["CategoryList","categoryName","useParams","dispatcher","useDispatch","useState","value","setValue","mapArray","setMapArray","navigate","useNavigate","flag","setFlag","fullCategoryList","useSelector","getFullCategoryList","useEffect","getCategoryList","length","newArray","map","e","index","prev","idx","findIndex","toLowerCase","items","Tab","label","sx","padding","paddingBottom","color","Box","maxWidth","bgcolor","onMouseEnter","onMouseLeave","Tabs","onChange","event","newValue","target","textContent","variant","scrollButtons","backgroundColor","overflowX","scrollbarWidth","display","gap","textTransform","minWidth","fontSize","fontFamily","fontWeight","lineHeight","borderColor","opacity","Container","Title","Suspense","fallback","Loader"],"sourceRoot":""}