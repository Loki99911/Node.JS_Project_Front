{"version":3,"file":"static/js/545.3a0e6967.chunk.js","mappings":"gNAGaA,EAAiBC,EAAAA,GAAAA,IAAH,0CAIdC,EAAYD,EAAAA,GAAAA,IAAH,4zBACLE,EAAAA,EAAAA,MAAAA,MAMN,SAAAC,GAAC,OAAIA,EAAED,MAAME,OAAOC,cAAnB,IAEU,SAAAF,GAAC,OAAIA,EAAED,MAAME,OAAOE,aAAnB,GAWVP,GAUM,SAAAI,GAAC,OAAIA,EAAED,MAAMK,MAAMC,IAAlB,IACP,SAAAL,GAAC,OAAIA,EAAED,MAAME,OAAOC,cAAnB,IAcDI,EAAUT,EAAAA,GAAAA,IAAH,uGAOPU,EAAWV,EAAAA,GAAAA,GAAH,yR,mBClDRW,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzB,OACE,SAACF,EAAD,WACE,UAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAKE,QAA1B,WACE,SAACL,EAAD,CACEM,IAAKH,EAAKI,aAAeJ,EAAKI,aAAe,CAAEC,QAAAA,GAC/CC,IAAKN,EAAKO,WAEZ,SAAClB,EAAD,CAAW,kBAAiBW,EAAKE,OAAjC,SAA0CF,EAAKO,UAC9CP,EAAKO,QAAQC,OAAS,KACrB,SAACrB,EAAD,WACE,uBAAIa,EAAKO,gBAMpB,C,+ICxBYE,E,QAAWrB,GAAAA,GAAH,2Z,SC+BrB,EAxByB,WACzB,IAAMsB,GAAWC,EAAAA,EAAAA,MACLC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,GAAiBC,EAAAA,EAAAA,IAAYC,EAAAA,IASnC,OAPAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,CAAEC,SAAUP,EAAcQ,MAAO,IACdV,EAAb,aAAjBE,GAAuCS,EAAAA,EAAAA,IAA4B,CAAEF,SAAU,UAAWC,MAAO,MACtFC,EAAAA,EAAAA,IAA4BH,GAE9C,GAAE,CAACR,EAAUE,KAGZ,SAACH,EAAD,UACGK,EAAeQ,MAAM,EAAG,GAAGC,KAAI,SAAAvB,GAAI,OAEhC,SAACD,EAAA,EAAD,CAAUC,KAAMA,GAAWA,EAAKE,OAFA,KAQ3C,C","sources":["components/CardMeal/CardMeal.styled.jsx","components/CardMeal/CardMeal.jsx","pages/CategoriesByName/CategoriesByName.styled.jsx","pages/CategoriesByName/CategoriesByName.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'utils/theme';\n\nexport const TooltipWrapper = styled.div`\n  display: none;\n`;\n\nexport const CardTitle = styled.div`\n  font-family: ${theme.fonts.main};\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 20px;\n  letter-spacing: -0.24px;\n  color: ${p => p.theme.colors.mainHeaderText};\n  padding: 16px;\n  background-color: ${p => p.theme.colors.recipeBlockBg};\n  position: absolute;\n  top: 245px;\n  left: 18px;\n\n  border-radius: 8px;\n  width: calc(100% - 36px);\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  :hover + ${TooltipWrapper} {\n    width: 100%;\n    position: absolute;\n    display: flex;\n    justify-content: center;\n    text-align: center;\n    max-width: 100%;\n    margin-top: -25px;\n    border-radius: 5px;\n    padding: 4px;\n    font-family: ${p => p.theme.fonts.main};\n    color: ${p => p.theme.colors.mainHeaderText};\n    background-color: #8baa36;\n\n    p {\n      width: 100%;\n      padding: 5px;\n    }\n\n    @media (min-width: 1440px) {\n      margin-top: 8px;\n    }\n  }\n`;\n\nexport const CardImg = styled.img`\n  height: 323px;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n\nexport const CardDish = styled.li`\n  width: 343px;\n  height: 323px;\n  border-radius: 8px;\n  position: relative;\n  /* overflow: hidden; */\n  @media (min-width: 768px) {\n    width: calc((100% - 32px) / 2);\n  }\n\n  @media (min-width: 1440px) {\n    width: calc((100% - 42px) / 4);\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport {\n  CardImg,\n  CardTitle,\n  CardDish,\n  TooltipWrapper,\n} from './CardMeal.styled';\nimport NoImage from '../../images/default.jpg';\n\nexport const CardMeal = ({ meal }) => {\n  return (\n    <CardDish>\n      <Link to={`/recipe/${meal.idMeal}`}>\n        <CardImg\n          src={meal.strMealThumb ? meal.strMealThumb : { NoImage }}\n          alt={meal.strMeal}\n        />\n        <CardTitle data-tooltip-id={meal.idMeal}>{meal.strMeal}</CardTitle>\n        {meal.strMeal.length > 30 && (\n          <TooltipWrapper>\n            <p>{meal.strMeal}</p>\n          </TooltipWrapper>\n        )}\n      </Link>\n    </CardDish>\n  );\n};\n","import styled from 'styled-components';\n\nexport const RowTable = styled.ul`\n  /* display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 100px 14px;  */\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n  margin-bottom: 100px;\n  margin-top: 32px;\n  gap: 28px;\n\n  @media (min-width: 768px) {\n    gap: 32px;\n    margin-bottom: 200px;\n    margin-top: 50px;\n  }\n\n  @media (min-width: 1440px) {\n    gap: 14px;\n    row-gap: 100px;\n    \n  }\n`;\n\n// export const CardTableWrap = styled.li`\n// position: relative;\n// `\n","import { CardMeal } from \"components/CardMeal/CardMeal\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getLimitedRecipesByCategory } from \"redux/outerRecipes/outerRecipesOperations\";\nimport { getLimitedRecipes } from \"redux/outerRecipes/outerRecipesSelectors\";\nimport {  RowTable } from \"./CategoriesByName.styled\";\n\n\nconst CategoriesByName = () => {\nconst dispatch = useDispatch();\n    const { categoryName } = useParams();\n    const limitedRecipes = useSelector(getLimitedRecipes);\n// console.log();\n    useEffect(() => {\n        const params = { category: categoryName, limit: 12 };\n        if (categoryName === 'desserts') {dispatch(getLimitedRecipesByCategory({ category: 'dessert', limit: 12 }))}\n        else {dispatch(getLimitedRecipesByCategory(params))};\n       \n    }, [dispatch, categoryName] );\n\n    return (\n      <RowTable>\n        {limitedRecipes.slice(0, 8).map(meal => (\n        //   <CardTableWrap key={meal.idMeal}>\n            <CardMeal meal={meal} key={meal.idMeal} />\n        //   </CardTableWrap>\n        ))}\n      </RowTable>\n    );\n  \n};\n\nexport default CategoriesByName;"],"names":["TooltipWrapper","styled","CardTitle","theme","p","colors","mainHeaderText","recipeBlockBg","fonts","main","CardImg","CardDish","CardMeal","meal","to","idMeal","src","strMealThumb","NoImage","alt","strMeal","length","RowTable","dispatch","useDispatch","categoryName","useParams","limitedRecipes","useSelector","getLimitedRecipes","useEffect","params","category","limit","getLimitedRecipesByCategory","slice","map"],"sourceRoot":""}